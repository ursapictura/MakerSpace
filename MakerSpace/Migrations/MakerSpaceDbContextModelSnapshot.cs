// <auto-generated />
using System;
using MakerSpace;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MakerSpace.Migrations
{
    [DbContext(typeof(MakerSpaceDbContext))]
    partial class MakerSpaceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MakerSpace.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sewing"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Amigurumi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Knit"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Quilting"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Embroidery"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sashiko"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Crochet"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Weaving"
                        });
                });

            modelBuilder.Entity("MakerSpace.Models.FavoritePattern", b =>
                {
                    b.Property<int>("FavoritesId")
                        .HasColumnType("integer");

                    b.Property<int>("PatternId")
                        .HasColumnType("integer");

                    b.HasKey("FavoritesId", "PatternId");

                    b.HasIndex("PatternId");

                    b.ToTable("FavoritePatterns");

                    b.HasData(
                        new
                        {
                            FavoritesId = 1,
                            PatternId = 1
                        },
                        new
                        {
                            FavoritesId = 2,
                            PatternId = 2
                        },
                        new
                        {
                            FavoritesId = 3,
                            PatternId = 3
                        },
                        new
                        {
                            FavoritesId = 4,
                            PatternId = 4
                        },
                        new
                        {
                            FavoritesId = 5,
                            PatternId = 5
                        });
                });

            modelBuilder.Entity("MakerSpace.Models.Favorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Favorites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("MakerSpace.Models.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Libraries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("MakerSpace.Models.LibraryPattern", b =>
                {
                    b.Property<int>("LibraryId")
                        .HasColumnType("integer");

                    b.Property<int>("PatternId")
                        .HasColumnType("integer");

                    b.HasKey("LibraryId", "PatternId");

                    b.HasIndex("PatternId");

                    b.ToTable("LibraryPatterns");

                    b.HasData(
                        new
                        {
                            LibraryId = 1,
                            PatternId = 1
                        },
                        new
                        {
                            LibraryId = 2,
                            PatternId = 2
                        },
                        new
                        {
                            LibraryId = 3,
                            PatternId = 3
                        },
                        new
                        {
                            LibraryId = 4,
                            PatternId = 4
                        },
                        new
                        {
                            LibraryId = 5,
                            PatternId = 5
                        });
                });

            modelBuilder.Entity("MakerSpace.Models.Pattern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MakerId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pdf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo2")
                        .HasColumnType("text");

                    b.Property<string>("Photo3")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateOnly>("Published")
                        .HasColumnType("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MakerId");

                    b.HasIndex("UserId");

                    b.ToTable("Patterns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Not your grandma's kitchen apron, but it has the same vibe! Bake your favorite dishes while wearing this retro apron inspired by your coziest memories.",
                            IsApproved = true,
                            IsDeleted = false,
                            MakerId = 1,
                            Name = "Kitchy Cooking Apron",
                            Pdf = "example/PdfPath/1",
                            Photo1 = "example/path/fileName/1",
                            Photo2 = "example/path/fileName/2",
                            Photo3 = "example/path/fileName/3",
                            Price = 12.00m,
                            Published = new DateOnly(2025, 7, 1)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "That's no moon....It's a Death Star! Recreate your favorite planet destroyer with this fun and simple amigurumi crochet pattern.",
                            IsApproved = true,
                            IsDeleted = false,
                            MakerId = 2,
                            Name = "Crochet Death Star",
                            Pdf = "example/PdfPath/2",
                            Photo1 = "example/path/fileName/4",
                            Photo2 = "example/path/fileName/5",
                            Photo3 = "example/path/fileName/6",
                            Price = 8.00m,
                            Published = new DateOnly(2025, 7, 2)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Snuggle up with a book and your favorite afternoon tea while wearing this cozy woll shawl.",
                            IsApproved = true,
                            IsDeleted = false,
                            MakerId = 3,
                            Name = "Sunday Tea Time Shawl ",
                            Pdf = "example/PdfPath/3",
                            Photo1 = "example/path/fileName/7",
                            Photo2 = "example/path/fileName/8",
                            Photo3 = "example/path/fileName/9",
                            Price = 8.00m,
                            Published = new DateOnly(2025, 7, 3)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "A nautical inspired quilt block.",
                            IsApproved = true,
                            IsDeleted = false,
                            MakerId = 4,
                            Name = "Octopus Quilt Block",
                            Pdf = "example/PdfPath/4",
                            Photo1 = "example/path/fileName/10",
                            Photo2 = "example/path/fileName/11",
                            Photo3 = "example/path/fileName/12",
                            Price = 5.00m,
                            Published = new DateOnly(2025, 7, 4)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Create your own custome fairy garden embroidery with flowers, mushrooms, and a tiny fairy cottage! This pattern is suitable for 8 inch hoops.",
                            IsApproved = true,
                            IsDeleted = false,
                            MakerId = 5,
                            Name = "Fairy Garden Embroidery",
                            Pdf = "example/PdfPath/5",
                            Photo1 = "example/path/fileName/113",
                            Photo2 = "example/path/fileName/14",
                            Photo3 = "example/path/fileName/15",
                            Price = 13.00m,
                            Published = new DateOnly(2025, 7, 5)
                        });
                });

            modelBuilder.Entity("MakerSpace.Models.PatternTag", b =>
                {
                    b.Property<int>("PatternId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("PatternId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PatternTags");

                    b.HasData(
                        new
                        {
                            PatternId = 1,
                            TagId = 1
                        },
                        new
                        {
                            PatternId = 1,
                            TagId = 2
                        },
                        new
                        {
                            PatternId = 2,
                            TagId = 2
                        },
                        new
                        {
                            PatternId = 2,
                            TagId = 4
                        },
                        new
                        {
                            PatternId = 3,
                            TagId = 1
                        },
                        new
                        {
                            PatternId = 4,
                            TagId = 3
                        },
                        new
                        {
                            PatternId = 4,
                            TagId = 5
                        },
                        new
                        {
                            PatternId = 5,
                            TagId = 6
                        });
                });

            modelBuilder.Entity("MakerSpace.Models.Storefront", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BannerPhoto")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SellerId")
                        .IsUnique();

                    b.ToTable("Storefronts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BannerPhoto = "https://d2culxnxbccemt.cloudfront.net/knit/content/uploads/2025/05/23175938/banner-home-patterns.jpg",
                            Description = "Unique, hand-crafted sewing patterns by Emily Johnson.",
                            Name = "Emily's Designs",
                            SellerId = 1
                        },
                        new
                        {
                            Id = 2,
                            BannerPhoto = "https://images.ctfassets.net/ivgal0r4n3ub/5fmLOvNNA3YIKYdJsv8NVV/c999033ed0e21c867162d43cb3ad800a/Knitting_Banner.jpg",
                            Description = "Trendy knitting patterns for all skill levels.",
                            Name = "Knit & Pearl Boutique",
                            SellerId = 3
                        },
                        new
                        {
                            Id = 3,
                            BannerPhoto = "https://images.squarespace-cdn.com/content/v1/5ddee0943d393a7e06173756/1674234278148-SZWPAT670GIYS1US0YGQ/Blog+Post+Banner+Journal+in+Yarn+How+to+Plan+a+Temperature+Blanket+Knitting+Project.png?format=1000w",
                            Description = "Professional-grade patterns for serious hobbyists.",
                            Name = "Laura's Pattern Pro",
                            SellerId = 5
                        },
                        new
                        {
                            Id = 4,
                            BannerPhoto = "https://images.squarespace-cdn.com/content/v1/5ddee0943d393a7e06173756/1674666723668-EYEKOQRTYN7BEL68RXK3/Blog+Post+Banner+Temperature+Blanket+How+to+Knit+in+Garter+Stitch+Fifty+Four+Ten+Studio+Worsted+Yarn+2023.png?format=1000w",
                            Description = "Exclusive marketplace items curated by Mike.",
                            Name = "Crafty Mike's Market",
                            SellerId = 2
                        },
                        new
                        {
                            Id = 5,
                            BannerPhoto = "https://previews.123rf.com/images/irishasel/irishasel1808/irishasel180800506/107485960-long-banner-a-cute-baby-lies-on-a-basket-with-tangles-of-knitting-threads-hendmeid-of-multi.jpg",
                            Description = "DIY patterns and tools for beginners and pros alike.",
                            Name = "DIY Dan's Workshop",
                            SellerId = 4
                        });
                });

            modelBuilder.Entity("MakerSpace.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nautical"
                        },
                        new
                        {
                            Id = 4,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Animals"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Easy"
                        });
                });

            modelBuilder.Entity("MakerSpace.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsSeller")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "emily.johnson@example.com",
                            FirstName = "Emily",
                            IsSeller = true,
                            LastName = "Johnson",
                            UserName = "sewingQueen"
                        },
                        new
                        {
                            Id = 2,
                            Email = "mike.smith@example.com",
                            FirstName = "Michael",
                            IsSeller = false,
                            LastName = "Smith",
                            UserName = "craftyMike"
                        },
                        new
                        {
                            Id = 3,
                            Email = "sarah.williams@example.com",
                            FirstName = "Sarah",
                            IsSeller = true,
                            LastName = "Williams",
                            UserName = "knitAndPearl"
                        },
                        new
                        {
                            Id = 4,
                            Email = "dan.brown@example.com",
                            FirstName = "Daniel",
                            IsSeller = false,
                            LastName = "Brown",
                            UserName = "diyDan"
                        },
                        new
                        {
                            Id = 5,
                            Email = "laura.davis@example.com",
                            FirstName = "Laura",
                            IsSeller = true,
                            LastName = "Davis",
                            UserName = "patternPro"
                        });
                });

            modelBuilder.Entity("MakerSpace.Models.FavoritePattern", b =>
                {
                    b.HasOne("MakerSpace.Models.Favorites", "Favorites")
                        .WithMany("FavoritePatterns")
                        .HasForeignKey("FavoritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakerSpace.Models.Pattern", "Pattern")
                        .WithMany("FavoritePatterns")
                        .HasForeignKey("PatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Favorites");

                    b.Navigation("Pattern");
                });

            modelBuilder.Entity("MakerSpace.Models.Favorites", b =>
                {
                    b.HasOne("MakerSpace.Models.User", "User")
                        .WithOne("Favorites")
                        .HasForeignKey("MakerSpace.Models.Favorites", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MakerSpace.Models.Library", b =>
                {
                    b.HasOne("MakerSpace.Models.User", "User")
                        .WithOne("Library")
                        .HasForeignKey("MakerSpace.Models.Library", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MakerSpace.Models.LibraryPattern", b =>
                {
                    b.HasOne("MakerSpace.Models.Library", "Library")
                        .WithMany("LibraryPatterns")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakerSpace.Models.Pattern", "Pattern")
                        .WithMany("LibraryPatterns")
                        .HasForeignKey("PatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");

                    b.Navigation("Pattern");
                });

            modelBuilder.Entity("MakerSpace.Models.Pattern", b =>
                {
                    b.HasOne("MakerSpace.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakerSpace.Models.User", "Maker")
                        .WithMany("Patterns")
                        .HasForeignKey("MakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakerSpace.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("Maker");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MakerSpace.Models.PatternTag", b =>
                {
                    b.HasOne("MakerSpace.Models.Pattern", "Pattern")
                        .WithMany("PatternTags")
                        .HasForeignKey("PatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakerSpace.Models.Tag", "Tag")
                        .WithMany("PatternTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pattern");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MakerSpace.Models.Storefront", b =>
                {
                    b.HasOne("MakerSpace.Models.User", "Seller")
                        .WithOne("Storefront")
                        .HasForeignKey("MakerSpace.Models.Storefront", "SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MakerSpace.Models.Favorites", b =>
                {
                    b.Navigation("FavoritePatterns");
                });

            modelBuilder.Entity("MakerSpace.Models.Library", b =>
                {
                    b.Navigation("LibraryPatterns");
                });

            modelBuilder.Entity("MakerSpace.Models.Pattern", b =>
                {
                    b.Navigation("FavoritePatterns");

                    b.Navigation("LibraryPatterns");

                    b.Navigation("PatternTags");
                });

            modelBuilder.Entity("MakerSpace.Models.Tag", b =>
                {
                    b.Navigation("PatternTags");
                });

            modelBuilder.Entity("MakerSpace.Models.User", b =>
                {
                    b.Navigation("Favorites")
                        .IsRequired();

                    b.Navigation("Library")
                        .IsRequired();

                    b.Navigation("Patterns");

                    b.Navigation("Storefront")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
